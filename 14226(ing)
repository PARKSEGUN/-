#include<iostream>
#include<algorithm>
#include<vector>
#include<climits>
#include<cmath>
#include<queue>
#include<string>
#include<deque>
#include<queue>

#define endl "\n"

using namespace std;

int N;
bool visited[2222];
queue<int> q[3];		//[0]은 현재 값, [1]은 걸리는 시간, [2]은 클립보드 값

//check

void Input() {
	cin >> N;
}

void Solution() {
	q[0].push(1);
	q[1].push(0);
	q[2].push(0);
	visited[1] = true;
	while (!q[0].empty()) {
		int here = q[0].front();
		int cnt = q[1].front();
		int board = q[2].front();
	///	cout << here<<" "<<cnt<<" "<<board << endl;
		q[0].pop(); q[1].pop(); q[2].pop();
		if (here == N) {
			cout << cnt;
			break; }
		cnt++;
		if (!visited[here + here]) {
			visited[here + here] = true;
			q[0].push(here + here);
			q[1].push(cnt + 1);
			q[2].push(here);
		}
		if (!visited[here - 1] && here - 1 > 1) {
			visited[here - 1] = true;
			q[0].push(here - 1);
			q[1].push(cnt + 1);
			q[2].push(here);
		}
		cnt--;
		if (cnt != 0) {
			if (!visited[here + board]) {
				visited[here + board] = true;
				q[0].push(here + board);
				q[1].push(cnt + 1);
				q[2].push(board);
			}
			if (!visited[here - 1] && here - 1 > 1) {
				visited[here - 1] = true;
				q[0].push(here - 1);
				q[1].push(cnt + 1);
				q[2].push(board);
			}
		}

	}
}

void Solve() {
	Input();
	Solution();
}

int main(void) {
	ios::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);
Solve();

}
