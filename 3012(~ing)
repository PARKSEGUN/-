#include<iostream>
#include<vector>
#include<queue>
#include<algorithm>
#include<string>
#include<memory.h>


using namespace std;
int N;
char arr[222];
void Input() {
	cin >> N;
	for (int i = 0; i < N; i++) { cin >> arr[i]; }
}
char open[3] = { '(','{',']'};
char close[3] = { ')','}',']'};
int dp[222][222];

int DP(int start,int end) {
	//cout << start << " " << end <<" "<<dp[start][end]<< endl;

	if (start > end) { dp[start][end] = 1; return 1; }

	if (dp[start][end] != -1) { return dp[start][end]; }

	int res=0;
	//start가 물음표가 아닐경우
	for (int i = 0; i < 3; i++) {
		if (arr[start] == open[i]||arr[start] == '?') {
			for (int j = start + 1; j <= end; j += 2) {
				if (arr[j] == close[i] || arr[j] == '?') {	//닫는 괄호를 만났거나 ? 를 만났을때
					if (j != end) {
						res += DP(start, j) * DP(j + 1, end);
					}
					else {
						res += DP(start + 1, end - 1);
					}
				}
			}
		}
	}
	dp[start][end] = res;
	return dp[start][end];

}

void Solve() {
	memset(dp, -1, sizeof(dp));
	cout<<DP(0, N - 1);
	cout << endl << endl;
	for (int i = 0; i < 6; i++) {
		for (int j = 0; j < 6; j++) {
			cout << dp[i][j] << " ";
		}cout << endl;
	}

}

int main(void) {
	ios::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);
	Input();
	Solve();
}
